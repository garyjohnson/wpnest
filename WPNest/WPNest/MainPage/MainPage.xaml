<phone:PhoneApplicationPage xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
							xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
							xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone" 
							xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" 
							xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
							xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
							xmlns:WPNest="clr-namespace:WPNest" 
							xmlns:Login="clr-namespace:WPNest.Login" 
							xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" 
							xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit" x:Class="WPNest.MainPage" mc:Ignorable="d" d:DesignWidth="480" d:DesignHeight="768" SupportedOrientations="Portrait" Orientation="Portrait" shell:SystemTray.BackgroundColor="Transparent" shell:SystemTray.ForegroundColor="#444444" shell:SystemTray.Opacity="0" shell:SystemTray.IsVisible="False">

	<phone:PhoneApplicationPage.Resources>
		<WPNest:FanModeToBoolConverter x:Key="FanModeToBoolConverter"/>
		<WPNest:FanModeToLabelConverter x:Key="FanModeToLabelConverter"/>
		<WPNest:IsAwayToLabelConverter x:Key="IsAwayToLabelConverter"/>
		<WPNest:TrueToVisibleConverter x:Key="TrueToVisibleConverter" />
        <WPNest:IsEnabledFanModeConverter x:Key="IsEnabledFanModeConverter" />
        <Storyboard x:Name="ResetZoom">
			<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
			<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
			<DoubleAnimation Duration="0" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
			<DoubleAnimation Duration="0" To="85" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
		</Storyboard>
		<Storyboard x:Name="ZoomIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="thermostatControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="180" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="181" />
				<EasingDoubleKeyFrame KeyTime="0:0:1.333" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="thermostatControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.3" />
				<EasingDoubleKeyFrame KeyTime="0:0:1.333" Value="0.3">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="thermostatControl">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.3" />
				<EasingDoubleKeyFrame KeyTime="0:0:1.333" Value="0.3">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="settingsButton">
				<EasingDoubleKeyFrame KeyTime="0" Value="85" />
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="85" />
				<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseInOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Style x:Key="SettingsButton" TargetType="Button">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" />
			<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
			<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}" />
			<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}" />
			<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}" />
			<Setter Property="Padding" Value="10,3,10,5" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation Duration="0" To="#FF494949" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates" />
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="path" Data="M131.667,73.3333 L132,57.0003 L182.332,32.667 L232.998,57.0002 L232.665,73.3336 L181.999,51.3336 z" HorizontalAlignment="Center" Height="45" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="130" RenderTransformOrigin="0.5,0.5" Fill="#7F494949" Margin="0,20">
								<Path.RenderTransform>
									<CompositeTransform Rotation="180" />
								</Path.RenderTransform>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ListPickerControlDarkTemplate" TargetType="toolkit:ListPicker">
			<StackPanel>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="PickerStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="Highlighted">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<SolidColorBrush Color="White" />
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<SolidColorBrush Color="White" />
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0">
									<DiscreteObjectKeyFrame Value="{StaticResource TransparentBrush}" KeyTime="0" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0">
									<DiscreteObjectKeyFrame Value="{StaticResource PhoneDisabledBrush}" KeyTime="0" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="UserControl" Storyboard.TargetProperty="Foreground" Duration="0">
									<DiscreteObjectKeyFrame Value="{StaticResource PhoneDisabledBrush}" KeyTime="0" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<ContentControl Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{StaticResource PhoneSubtleBrush}" FontSize="{StaticResource PhoneFontSizeNormal}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0 0 0 8" />
				<Grid>
					<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<UserControl x:Name="UserControl" Foreground="{TemplateBinding Foreground}">
							<StackPanel>
								<TextBlock x:Name="MultipleSelectionModeSummary" Margin="8 8 0 8" />
								<Canvas x:Name="ItemsPresenterHost" MinHeight="46">
									<ItemsPresenter x:Name="ItemsPresenter">
										<ItemsPresenter.RenderTransform>
											<TranslateTransform x:Name="ItemsPresenterTranslateTransform" />
										</ItemsPresenter.RenderTransform>
									</ItemsPresenter>
								</Canvas>
							</StackPanel>
						</UserControl>
					</Border>
				</Grid>
			</StackPanel>
		</ControlTemplate>
		<Style x:Key="ToggleSwitchButtonDarkStyle" TargetType="toolkitPrimitives:ToggleSwitchButton">
			<Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="SwitchForeground" Value="{StaticResource PhoneAccentBrush}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkitPrimitives:ToggleSwitchButton">
						<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CacheMode="BitmapCache" Opacity="{TemplateBinding Opacity}" Padding="{TemplateBinding Padding}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimation Duration="0" To="{StaticResource PhoneForegroundColor}" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="SwitchBottom" />
											<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.05" To="Unchecked" />
										<VisualTransition GeneratedDuration="0:0:0.05" To="Checked" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="69" Storyboard.TargetProperty="(TranslateTransform.X)" Storyboard.TargetName="BackgroundTranslation">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="15" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0" To="69" Storyboard.TargetProperty="(TranslateTransform.X)" Storyboard.TargetName="ThumbTranslation">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="15" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Dragging" />
									<VisualState x:Name="Unchecked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(TranslateTransform.X)" Storyboard.TargetName="BackgroundTranslation" />
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(TranslateTransform.X)" Storyboard.TargetName="ThumbTranslation" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates" />
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="SwitchRoot" Background="Transparent" Height="95" Width="136">
								<Grid x:Name="SwitchTrack" Width="89">
									<Grid x:Name="SwitchBottom" Background="{TemplateBinding SwitchForeground}" Height="34">
										<Rectangle x:Name="SwitchBackground" Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Height="20" VerticalAlignment="Center" Width="77">
											<Rectangle.RenderTransform>
												<TranslateTransform x:Name="BackgroundTranslation" />
											</Rectangle.RenderTransform>
										</Rectangle>
										<Border BorderThickness="3" BorderBrush="#FFFFFFFF">
											<Border BorderThickness="4" BorderBrush="Black" />
										</Border>
									</Grid>
									<Border x:Name="SwitchThumb" BorderThickness="4,0" HorizontalAlignment="Left" Height="38" Margin="-4,0" Width="28" BorderBrush="Black">
										<Border.RenderTransform>
											<TranslateTransform x:Name="ThumbTranslation" />
										</Border.RenderTransform>
										<Border x:Name="ThumbCenter" BorderThickness="2" Background="#FFFFFFFF" BorderBrush="White"/>
									</Border>
								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ToggleSwitchDarkStyle" TargetType="toolkit:ToggleSwitch">
			<Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}" />
			<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyLight}" />
			<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeLarge}" />
			<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="SwitchForeground" Value="{StaticResource PhoneAccentBrush}" />
			<Setter Property="VerticalContentAlignment" Value="Top" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:ToggleSwitch">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CacheMode="BitmapCache" Padding="{TemplateBinding Padding}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header" />
											<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid Margin="12,5,36,42">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{StaticResource PhoneSubtleBrush}" FontSize="{StaticResource PhoneFontSizeNormal}" FontFamily="{StaticResource PhoneFontFamilyNormal}" HorizontalAlignment="Left" IsTabStop="False" Margin="-1,0,0,0" Opacity="{TemplateBinding Opacity}" VerticalAlignment="Bottom" />
								<ContentControl x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="-1,1,0,-7" Opacity="{TemplateBinding Opacity}" Grid.Row="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								<toolkitPrimitives:ToggleSwitchButton x:Name="Switch" Background="{TemplateBinding Background}" Grid.Column="1" Margin="-22,-29,-24,-28" Opacity="{TemplateBinding Opacity}" Grid.RowSpan="2" SwitchForeground="{TemplateBinding SwitchForeground}" VerticalAlignment="Bottom" Style="{StaticResource ToggleSwitchButtonDarkStyle}" />
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="CoolDotBrush" Color="#FF7A8BB9" />
		<SolidColorBrush x:Key="DisabledDotBrush" Color="#FFA6A6A6" />
		<SolidColorBrush x:Key="HeatDotBrush" Color="#FFB44040" />
		<Storyboard x:Name="MoveThermostatToBackground">
			<DoubleAnimation Duration="0:0:0.6" To="-150" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True">
				<DoubleAnimation.EasingFunction>
					<BackEase EasingMode="EaseOut" />
				</DoubleAnimation.EasingFunction>
			</DoubleAnimation>
			<DoubleAnimation Duration="0:0:0.6" To="0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True">
				<DoubleAnimation.EasingFunction>
					<QuadraticEase EasingMode="EaseOut" />
				</DoubleAnimation.EasingFunction>
			</DoubleAnimation>
			<DoubleAnimation Duration="0:0:0.6" To="0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True">
				<DoubleAnimation.EasingFunction>
					<QuadraticEase EasingMode="EaseOut" />
				</DoubleAnimation.EasingFunction>
			</DoubleAnimation>
			<DoubleAnimation Duration="0:0:0.6" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True">
				<DoubleAnimation.EasingFunction>
					<QuadraticEase EasingMode="EaseOut" />
				</DoubleAnimation.EasingFunction>
			</DoubleAnimation>
		</Storyboard>
		<Storyboard x:Name="MoveThermostatToForeground">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="thermostatControl">
				<SplineDoubleKeyFrame KeyTime="0" Value="-150" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.7881393432617188E-05">
					<EasingDoubleKeyFrame.EasingFunction>
						<BackEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="thermostatControl">
				<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="thermostatControl">
				<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thermostatControl">
				<SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuadraticEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<DataTemplate x:Key="HvacModeControlTemplate">
			<WPNest:HvacModeControl HorizontalAlignment="Left" 
									HvacMode="{Binding HvacMode}"/>
		</DataTemplate>
	</phone:PhoneApplicationPage.Resources>

	<phone:PhoneApplicationPage.FontFamily>
		<StaticResource ResourceKey="PhoneFontFamilyNormal" />
	</phone:PhoneApplicationPage.FontFamily>
	<phone:PhoneApplicationPage.FontSize>
		<StaticResource ResourceKey="PhoneFontSizeNormal" />
	</phone:PhoneApplicationPage.FontSize>
	<phone:PhoneApplicationPage.Foreground>
		<StaticResource ResourceKey="PhoneForegroundBrush" />
	</phone:PhoneApplicationPage.Foreground>

	<d:DataContext>
		<WPNest:NestSampleViewModel />
	</d:DataContext>

	<phone:PhoneApplicationPage.DataContext>
		<WPNest:NestViewModel />
	</phone:PhoneApplicationPage.DataContext>

	<Grid x:Name="LayoutRoot" Background="{StaticResource BackgroundBrush}" Margin="0">
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="LogInState" >
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.3">
						<VisualTransition.GeneratedEasingFunction>
							<QuadraticEase EasingMode="EaseInOut" />
						</VisualTransition.GeneratedEasingFunction>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:0.3" To="Default" />
					<VisualTransition GeneratedDuration="0:0:0.3" To="PromptingLogIn">
						<VisualTransition.GeneratedEasingFunction>
							<QuadraticEase EasingMode="EaseInOut" />
						</VisualTransition.GeneratedEasingFunction>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:0.3" To="LoggedIn">
						<VisualTransition.GeneratedEasingFunction>
							<QuadraticEase EasingMode="EaseInOut" />
						</VisualTransition.GeneratedEasingFunction>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="Default">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loginControl" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="loginControl">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="thermostatControl">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="0.995" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loadingPanel" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="PromptingLogIn">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loginControl" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="loginControl">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="LoggedIn">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loadingPanel" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="loadingPanel">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="thermostatControl">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thermostatControl" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Error">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="errorGrid">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
							<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="errorGrid">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="errorGrid">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="SettingsState">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.3" />
				</VisualStateGroup.Transitions>
				<VisualState x:Name="SettingsOpen">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="settingsGrid" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="settingsButton" d:IsOptimized="True" />
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsGrid" d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsGrid">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="settingsInputBlocker">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>True</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsInputBlocker" d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="SettingsClosed">
					<Storyboard>
						<DoubleAnimation Duration="0" To="408" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="settingsGrid" d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Grid.RowDefinitions>
			<RowDefinition Height="32" />
			<RowDefinition />
		</Grid.RowDefinitions>

		<StackPanel x:Name="loadingPanel" VerticalAlignment="Center" Opacity="0" IsHitTestVisible="True" Margin="0,352,0,330" Grid.Row="1">
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="wpnest" VerticalAlignment="Center" FontSize="48" FontFamily="Segoe WP SemiLight" Foreground="{StaticResource logoBrush}" Margin="0" />
			<toolkit:PerformanceProgressBar x:Name="wp7ProgressBar" IsIndeterminate="True" />
			<ProgressBar x:Name="wp8ProgressBar" IsIndeterminate="True" Visibility="Collapsed"/>
		</StackPanel>

		<WPNest:ThermostatControl x:Name="thermostatControl" Margin="50,194,50,176" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" Grid.Row="1">
			<WPNest:ThermostatControl.Projection>
				<PlaneProjection CenterOfRotationY="7" />
			</WPNest:ThermostatControl.Projection>
			<WPNest:ThermostatControl.RenderTransform>
				<CompositeTransform />
			</WPNest:ThermostatControl.RenderTransform>
		</WPNest:ThermostatControl>

		<Login:LoginControl x:Name="loginControl" Opacity="0" IsHitTestVisible="False" LoginPressed="OnLoginPressed" Grid.RowSpan="2" Grid.Row="1" />

		<Button x:Name="settingsButton" VerticalAlignment="Bottom" Style="{StaticResource SettingsButton}" RenderTransformOrigin="0.5,0.5" Click="OnSettingsButtonPress" Padding="10,3,10,5" Grid.Row="1">
			<Button.RenderTransform>
				<CompositeTransform />
			</Button.RenderTransform>
		</Button>
		<Rectangle x:Name="settingsInputBlocker" Grid.RowSpan="2" Fill="#01FFFFFF" StrokeThickness="0" IsHitTestVisible="False" MouseLeftButtonDown="OnClickedOutsideOfSettings" Opacity="0" />
		<Grid x:Name="settingsGrid" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Grid.Row="1" Background="#FF1F1F1F">
			<Grid.RenderTransform>
				<CompositeTransform TranslateY="408" />
			</Grid.RenderTransform>
			<Grid.RowDefinitions>
				<RowDefinition Height="20" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock x:Name="awayLabel" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Away" VerticalAlignment="Top" Grid.Row="2" Margin="32,0,0,0" FontSize="21.333" FontFamily="Segoe WP Light" Foreground="#FDC1C1C1" />
			<toolkit:ToggleSwitch x:Name="awaySwitch" VerticalAlignment="Top" Grid.Row="2" Margin="20,10,0,0" IsChecked="{Binding IsAway, Mode=TwoWay}" SwitchForeground="{StaticResource PhoneAccentBrush}" Foreground="White" Background="Black" Style="{StaticResource ToggleSwitchDarkStyle}" />
			<TextBlock x:Name="fanLabel" Grid.Row="3" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Fan" VerticalAlignment="Top" Margin="32,0,0,0" FontSize="21.333" FontFamily="Segoe WP Light" Foreground="#FDC1C1C1" />
            <toolkit:ToggleSwitch x:Name="fanSwitch" IsEnabled="{Binding FanMode, Converter={StaticResource IsEnabledFanModeConverter}}" VerticalAlignment="Top" Grid.Row="3" Margin="20,10,0,0" Content="{Binding FanMode, Converter={StaticResource FanModeToLabelConverter}}" IsChecked="{Binding FanMode, Converter={StaticResource FanModeToBoolConverter}, Mode=TwoWay}" SwitchForeground="{StaticResource PhoneAccentBrush}" Foreground="White" Background="Black" Style="{StaticResource ToggleSwitchDarkStyle}" />
			<toolkit:ListPicker x:Name="hvacPicker" Grid.Row="4" Margin="30,0,30,20" SelectionChanged="OnHvacSelectionChanged"
								Template="{StaticResource ListPickerControlTemplateLight}">
				<WPNest:HvacModeControl x:Name="hvacHeatOnly"  HvacMode="HeatOnly"/>
				<WPNest:HvacModeControl x:Name="hvacCoolOnly" HvacMode="CoolOnly"/>
				<WPNest:HvacModeControl x:Name="hvacHeatAndCool"  HvacMode="HeatAndCool"/>
				<WPNest:HvacModeControl x:Name="hvacOff"  HvacMode="Off"/>
			</toolkit:ListPicker>
            <Button x:Name="logoutButton" Content="Logout" Grid.Row="5" Click="OnLogoutButtonPress" Margin="20,0,20,20"/>
		</Grid>
		<Grid x:Name="errorGrid" Grid.RowSpan="2" Background="{StaticResource BackgroundBrush}" Opacity="0" IsHitTestVisible="False" Visibility="Collapsed" Tap="OnTapToRetryAfterError">
			<StackPanel VerticalAlignment="Center" Margin="30,0">
				<TextBlock TextWrapping="Wrap" Foreground="#FF171717" FontSize="32" Text="Oops! We had some trouble connecting with the server." FontFamily="Segoe WP Semibold"/>
				<TextBlock TextWrapping="Wrap" Foreground="#FF171717" FontSize="26.667" Text="Check your internet connection and tap to try again." Margin="0,10,0,0"/>
			</StackPanel>
		</Grid>

	</Grid>

</phone:PhoneApplicationPage>